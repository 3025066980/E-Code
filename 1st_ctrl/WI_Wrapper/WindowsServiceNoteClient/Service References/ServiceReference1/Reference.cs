//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.269
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsServiceNoteClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class WcfException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaveForm", Namespace="http://schemas.datacontract.org/2004/07/TranmitterLib")]
    [System.SerializableAttribute()]
    public partial class WaveForm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double BandWidthField;
        
        private System.Nullable<double> EndFrequencyField;
        
        private string FreChangeRateField;
        
        private double FrequencyField;
        
        private string NameField;
        
        private System.Nullable<double> PhaseField;
        
        private System.Nullable<double> RollOffFactorField;
        
        private System.Nullable<double> StartFrequencyField;
        
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double BandWidth {
            get {
                return this.BandWidthField;
            }
            set {
                if ((this.BandWidthField.Equals(value) != true)) {
                    this.BandWidthField = value;
                    this.RaisePropertyChanged("BandWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> EndFrequency {
            get {
                return this.EndFrequencyField;
            }
            set {
                if ((this.EndFrequencyField.Equals(value) != true)) {
                    this.EndFrequencyField = value;
                    this.RaisePropertyChanged("EndFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FreChangeRate {
            get {
                return this.FreChangeRateField;
            }
            set {
                if ((object.ReferenceEquals(this.FreChangeRateField, value) != true)) {
                    this.FreChangeRateField = value;
                    this.RaisePropertyChanged("FreChangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> Phase {
            get {
                return this.PhaseField;
            }
            set {
                if ((this.PhaseField.Equals(value) != true)) {
                    this.PhaseField = value;
                    this.RaisePropertyChanged("Phase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> RollOffFactor {
            get {
                return this.RollOffFactorField;
            }
            set {
                if ((this.RollOffFactorField.Equals(value) != true)) {
                    this.RollOffFactorField = value;
                    this.RaisePropertyChanged("RollOffFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> StartFrequency {
            get {
                return this.StartFrequencyField;
            }
            set {
                if ((this.StartFrequencyField.Equals(value) != true)) {
                    this.StartFrequencyField = value;
                    this.RaisePropertyChanged("StartFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Antenna", Namespace="http://schemas.datacontract.org/2004/07/TranmitterLib")]
    [System.SerializableAttribute()]
    public partial class Antenna : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ApertureDistributionField;
        
        private System.Nullable<double> BlockageRadiusField;
        
        private System.Nullable<double> EdgeTeperField;
        
        private System.Nullable<double> LengthField;
        
        private double MaxGainField;
        
        private string NameField;
        
        private System.Nullable<double> PitchField;
        
        private string PolarizationField;
        
        private System.Nullable<double> RadiusField;
        
        private double RecieveThreholdField;
        
        private double TemperatureField;
        
        private double TransmissionLossField;
        
        private string TypeField;
        
        private double VSWRField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ApertureDistribution {
            get {
                return this.ApertureDistributionField;
            }
            set {
                if ((object.ReferenceEquals(this.ApertureDistributionField, value) != true)) {
                    this.ApertureDistributionField = value;
                    this.RaisePropertyChanged("ApertureDistribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> BlockageRadius {
            get {
                return this.BlockageRadiusField;
            }
            set {
                if ((this.BlockageRadiusField.Equals(value) != true)) {
                    this.BlockageRadiusField = value;
                    this.RaisePropertyChanged("BlockageRadius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> EdgeTeper {
            get {
                return this.EdgeTeperField;
            }
            set {
                if ((this.EdgeTeperField.Equals(value) != true)) {
                    this.EdgeTeperField = value;
                    this.RaisePropertyChanged("EdgeTeper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double MaxGain {
            get {
                return this.MaxGainField;
            }
            set {
                if ((this.MaxGainField.Equals(value) != true)) {
                    this.MaxGainField = value;
                    this.RaisePropertyChanged("MaxGain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> Pitch {
            get {
                return this.PitchField;
            }
            set {
                if ((this.PitchField.Equals(value) != true)) {
                    this.PitchField = value;
                    this.RaisePropertyChanged("Pitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Polarization {
            get {
                return this.PolarizationField;
            }
            set {
                if ((object.ReferenceEquals(this.PolarizationField, value) != true)) {
                    this.PolarizationField = value;
                    this.RaisePropertyChanged("Polarization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double RecieveThrehold {
            get {
                return this.RecieveThreholdField;
            }
            set {
                if ((this.RecieveThreholdField.Equals(value) != true)) {
                    this.RecieveThreholdField = value;
                    this.RaisePropertyChanged("RecieveThrehold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double TransmissionLoss {
            get {
                return this.TransmissionLossField;
            }
            set {
                if ((this.TransmissionLossField.Equals(value) != true)) {
                    this.TransmissionLossField = value;
                    this.RaisePropertyChanged("TransmissionLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double VSWR {
            get {
                return this.VSWRField;
            }
            set {
                if ((this.VSWRField.Equals(value) != true)) {
                    this.VSWRField = value;
                    this.RaisePropertyChanged("VSWR");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transmitter", Namespace="http://schemas.datacontract.org/2004/07/TranmitterLib")]
    [System.SerializableAttribute()]
    public partial class Transmitter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AntennaNameField;
        
        private string NameField;
        
        private double PowerField;
        
        private double RotateXField;
        
        private double RotateYField;
        
        private double RotateZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AntennaName {
            get {
                return this.AntennaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AntennaNameField, value) != true)) {
                    this.AntennaNameField = value;
                    this.RaisePropertyChanged("AntennaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Power {
            get {
                return this.PowerField;
            }
            set {
                if ((this.PowerField.Equals(value) != true)) {
                    this.PowerField = value;
                    this.RaisePropertyChanged("Power");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double RotateX {
            get {
                return this.RotateXField;
            }
            set {
                if ((this.RotateXField.Equals(value) != true)) {
                    this.RotateXField = value;
                    this.RaisePropertyChanged("RotateX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double RotateY {
            get {
                return this.RotateYField;
            }
            set {
                if ((this.RotateYField.Equals(value) != true)) {
                    this.RotateYField = value;
                    this.RaisePropertyChanged("RotateY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double RotateZ {
            get {
                return this.RotateZField;
            }
            set {
                if ((this.RotateZField.Equals(value) != true)) {
                    this.RotateZField = value;
                    this.RaisePropertyChanged("RotateZ");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerInfo", Namespace="http://schemas.datacontract.org/2004/07/TranmitterLib")]
    [System.SerializableAttribute()]
    public partial class TerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double Vertex1XField;
        
        private double Vertex1YField;
        
        private double Vertex1ZField;
        
        private double Vertex2XField;
        
        private double Vertex2YField;
        
        private double Vertex2ZField;
        
        private double Vertex3XField;
        
        private double Vertex3YField;
        
        private double Vertex3ZField;
        
        private double Vertex4XField;
        
        private double Vertex4YField;
        
        private double Vertex4ZField;
        
        private double ZmaxField;
        
        private double ZminField;
        
        private string nameField;
        
        private double originXField;
        
        private double originYField;
        
        private string pathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex1X {
            get {
                return this.Vertex1XField;
            }
            set {
                if ((this.Vertex1XField.Equals(value) != true)) {
                    this.Vertex1XField = value;
                    this.RaisePropertyChanged("Vertex1X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex1Y {
            get {
                return this.Vertex1YField;
            }
            set {
                if ((this.Vertex1YField.Equals(value) != true)) {
                    this.Vertex1YField = value;
                    this.RaisePropertyChanged("Vertex1Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex1Z {
            get {
                return this.Vertex1ZField;
            }
            set {
                if ((this.Vertex1ZField.Equals(value) != true)) {
                    this.Vertex1ZField = value;
                    this.RaisePropertyChanged("Vertex1Z");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex2X {
            get {
                return this.Vertex2XField;
            }
            set {
                if ((this.Vertex2XField.Equals(value) != true)) {
                    this.Vertex2XField = value;
                    this.RaisePropertyChanged("Vertex2X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex2Y {
            get {
                return this.Vertex2YField;
            }
            set {
                if ((this.Vertex2YField.Equals(value) != true)) {
                    this.Vertex2YField = value;
                    this.RaisePropertyChanged("Vertex2Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex2Z {
            get {
                return this.Vertex2ZField;
            }
            set {
                if ((this.Vertex2ZField.Equals(value) != true)) {
                    this.Vertex2ZField = value;
                    this.RaisePropertyChanged("Vertex2Z");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex3X {
            get {
                return this.Vertex3XField;
            }
            set {
                if ((this.Vertex3XField.Equals(value) != true)) {
                    this.Vertex3XField = value;
                    this.RaisePropertyChanged("Vertex3X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex3Y {
            get {
                return this.Vertex3YField;
            }
            set {
                if ((this.Vertex3YField.Equals(value) != true)) {
                    this.Vertex3YField = value;
                    this.RaisePropertyChanged("Vertex3Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex3Z {
            get {
                return this.Vertex3ZField;
            }
            set {
                if ((this.Vertex3ZField.Equals(value) != true)) {
                    this.Vertex3ZField = value;
                    this.RaisePropertyChanged("Vertex3Z");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex4X {
            get {
                return this.Vertex4XField;
            }
            set {
                if ((this.Vertex4XField.Equals(value) != true)) {
                    this.Vertex4XField = value;
                    this.RaisePropertyChanged("Vertex4X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex4Y {
            get {
                return this.Vertex4YField;
            }
            set {
                if ((this.Vertex4YField.Equals(value) != true)) {
                    this.Vertex4YField = value;
                    this.RaisePropertyChanged("Vertex4Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Vertex4Z {
            get {
                return this.Vertex4ZField;
            }
            set {
                if ((this.Vertex4ZField.Equals(value) != true)) {
                    this.Vertex4ZField = value;
                    this.RaisePropertyChanged("Vertex4Z");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Zmax {
            get {
                return this.ZmaxField;
            }
            set {
                if ((this.ZmaxField.Equals(value) != true)) {
                    this.ZmaxField = value;
                    this.RaisePropertyChanged("Zmax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Zmin {
            get {
                return this.ZminField;
            }
            set {
                if ((this.ZminField.Equals(value) != true)) {
                    this.ZminField = value;
                    this.RaisePropertyChanged("Zmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double originX {
            get {
                return this.originXField;
            }
            set {
                if ((this.originXField.Equals(value) != true)) {
                    this.originXField = value;
                    this.RaisePropertyChanged("originX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double originY {
            get {
                return this.originYField;
            }
            set {
                if ((this.originYField.Equals(value) != true)) {
                    this.originYField = value;
                    this.RaisePropertyChanged("originY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string path {
            get {
                return this.pathField;
            }
            set {
                if ((object.ReferenceEquals(this.pathField, value) != true)) {
                    this.pathField = value;
                    this.RaisePropertyChanged("path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskInfo", Namespace="http://schemas.datacontract.org/2004/07/TranmitterLib")]
    [System.SerializableAttribute()]
    public partial class TaskInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ProNameField;
        
        private int TaskIDField;
        
        private string[] filenamesField;
        
        private string[] filepathsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ProName {
            get {
                return this.ProNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProNameField, value) != true)) {
                    this.ProNameField = value;
                    this.RaisePropertyChanged("ProName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] filenames {
            get {
                return this.filenamesField;
            }
            set {
                if ((object.ReferenceEquals(this.filenamesField, value) != true)) {
                    this.filenamesField = value;
                    this.RaisePropertyChanged("filenames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] filepaths {
            get {
                return this.filepathsField;
            }
            set {
                if ((object.ReferenceEquals(this.filepathsField, value) != true)) {
                    this.filepathsField = value;
                    this.RaisePropertyChanged("filepaths");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectInfo", Namespace="http://schemas.datacontract.org/2004/07/TranmitterLib")]
    [System.SerializableAttribute()]
    public partial class ProjectInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<System.DateTime> CreateTimeField;
        
        private string DirectoryField;
        
        private System.Nullable<System.DateTime> EndTimeField;
        
        private string NameField;
        
        private string PercentField;
        
        private short ProStateField;
        
        private string ResultDirectoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Directory {
            get {
                return this.DirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectoryField, value) != true)) {
                    this.DirectoryField = value;
                    this.RaisePropertyChanged("Directory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((object.ReferenceEquals(this.PercentField, value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public short ProState {
            get {
                return this.ProStateField;
            }
            set {
                if ((this.ProStateField.Equals(value) != true)) {
                    this.ProStateField = value;
                    this.RaisePropertyChanged("ProState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ResultDirectory {
            get {
                return this.ResultDirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDirectoryField, value) != true)) {
                    this.ResultDirectoryField = value;
                    this.RaisePropertyChanged("ResultDirectory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetTaskResultDir", ReplyAction="http://tempuri.org/IService1/iGetTaskResultDirResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetTaskResultDirWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string iGetTaskResultDir(int TaskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetResultFileNames", ReplyAction="http://tempuri.org/IService1/iGetResultFileNamesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetResultFileNamesWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string[] iGetResultFileNames(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iDelProject", ReplyAction="http://tempuri.org/IService1/iDelProjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iDelProjectWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iDelProject(string proname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HeartBeat", ReplyAction="http://tempuri.org/IService1/HeartBeatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/HeartBeatWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void HeartBeat(System.Guid guid, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetAllWaveFormNames", ReplyAction="http://tempuri.org/IService1/iGetAllWaveFormNamesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetAllWaveFormNamesWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string[] iGetAllWaveFormNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetAllWaveForm", ReplyAction="http://tempuri.org/IService1/iGetAllWaveFormResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetAllWaveFormWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string[] iGetAllWaveForm(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetWaveForm", ReplyAction="http://tempuri.org/IService1/iGetWaveFormResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetWaveFormWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        WindowsServiceNoteClient.ServiceReference1.WaveForm iGetWaveForm(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iAddWaveForm", ReplyAction="http://tempuri.org/IService1/iAddWaveFormResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iAddWaveFormWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iAddWaveForm(WindowsServiceNoteClient.ServiceReference1.WaveForm waveform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iDelWaveForm", ReplyAction="http://tempuri.org/IService1/iDelWaveFormResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iDelWaveFormWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iDelWaveForm(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iUpdateWaveForm", ReplyAction="http://tempuri.org/IService1/iUpdateWaveFormResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iUpdateWaveFormWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iUpdateWaveForm(WindowsServiceNoteClient.ServiceReference1.WaveForm waveform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetAllAntennaNames", ReplyAction="http://tempuri.org/IService1/iGetAllAntennaNamesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetAllAntennaNamesWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string[] iGetAllAntennaNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetAllAntenna", ReplyAction="http://tempuri.org/IService1/iGetAllAntennaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetAllAntennaWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string[] iGetAllAntenna(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetAntenna", ReplyAction="http://tempuri.org/IService1/iGetAntennaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetAntennaWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        WindowsServiceNoteClient.ServiceReference1.Antenna iGetAntenna(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iAddAntenna", ReplyAction="http://tempuri.org/IService1/iAddAntennaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iAddAntennaWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iAddAntenna(WindowsServiceNoteClient.ServiceReference1.Antenna antenna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iDelAntenna", ReplyAction="http://tempuri.org/IService1/iDelAntennaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iDelAntennaWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iDelAntenna(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iUpdateAntenna", ReplyAction="http://tempuri.org/IService1/iUpdateAntennaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iUpdateAntennaWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iUpdateAntenna(WindowsServiceNoteClient.ServiceReference1.Antenna antenna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetAllTransmitter", ReplyAction="http://tempuri.org/IService1/iGetAllTransmitterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetAllTransmitterWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string[] iGetAllTransmitter();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetTransmitter", ReplyAction="http://tempuri.org/IService1/iGetTransmitterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetTransmitterWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        WindowsServiceNoteClient.ServiceReference1.Transmitter iGetTransmitter(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iAddTransmitter", ReplyAction="http://tempuri.org/IService1/iAddTransmitterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iAddTransmitterWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iAddTransmitter(WindowsServiceNoteClient.ServiceReference1.Transmitter transmitter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iDelTransmitter", ReplyAction="http://tempuri.org/IService1/iDelTransmitterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iDelTransmitterWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iDelTransmitter(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iUpdateTransmitter", ReplyAction="http://tempuri.org/IService1/iUpdateTransmitterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iUpdateTransmitterWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iUpdateTransmitter(WindowsServiceNoteClient.ServiceReference1.Transmitter transmitter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetTerNames", ReplyAction="http://tempuri.org/IService1/iGetTerNamesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetTerNamesWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string[] iGetTerNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetTer", ReplyAction="http://tempuri.org/IService1/iGetTerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetTerWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        WindowsServiceNoteClient.ServiceReference1.TerInfo iGetTer(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iAddTerInfo", ReplyAction="http://tempuri.org/IService1/iAddTerInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iAddTerInfoWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iAddTerInfo(WindowsServiceNoteClient.ServiceReference1.TerInfo terinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iDelTerInfo", ReplyAction="http://tempuri.org/IService1/iDelTerInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iDelTerInfoWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iDelTerInfo(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreatTables", ReplyAction="http://tempuri.org/IService1/CreatTablesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/CreatTablesWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void CreatTables(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/GetDataWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string GetData(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutData", ReplyAction="http://tempuri.org/IService1/PutDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/PutDataWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void PutData(string path, string name, string putStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetMinTaskID", ReplyAction="http://tempuri.org/IService1/iGetMinTaskIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetMinTaskIDWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        WindowsServiceNoteClient.ServiceReference1.TaskInfo iGetMinTaskID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetFilePath", ReplyAction="http://tempuri.org/IService1/iGetFilePathResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetFilePathWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string[] iGetFilePath(string[] filenames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iSetTaskState", ReplyAction="http://tempuri.org/IService1/iSetTaskStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iSetTaskStateWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        void iSetTaskState(int TaskID, short state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/iGetProjectInfo", ReplyAction="http://tempuri.org/IService1/iGetProjectInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsServiceNoteClient.ServiceReference1.WcfException), Action="http://tempuri.org/IService1/iGetProjectInfoWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        WindowsServiceNoteClient.ServiceReference1.ProjectInfo[] iGetProjectInfo();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WindowsServiceNoteClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WindowsServiceNoteClient.ServiceReference1.IService1>, WindowsServiceNoteClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string iGetTaskResultDir(int TaskID) {
            return base.Channel.iGetTaskResultDir(TaskID);
        }
        
        public string[] iGetResultFileNames(string path) {
            return base.Channel.iGetResultFileNames(path);
        }
        
        public void iDelProject(string proname) {
            base.Channel.iDelProject(proname);
        }
        
        public void HeartBeat(System.Guid guid, string ip) {
            base.Channel.HeartBeat(guid, ip);
        }
        
        public string[] iGetAllWaveFormNames() {
            return base.Channel.iGetAllWaveFormNames();
        }
        
        public string[] iGetAllWaveForm(string type) {
            return base.Channel.iGetAllWaveForm(type);
        }
        
        public WindowsServiceNoteClient.ServiceReference1.WaveForm iGetWaveForm(string name) {
            return base.Channel.iGetWaveForm(name);
        }
        
        public void iAddWaveForm(WindowsServiceNoteClient.ServiceReference1.WaveForm waveform) {
            base.Channel.iAddWaveForm(waveform);
        }
        
        public void iDelWaveForm(string name) {
            base.Channel.iDelWaveForm(name);
        }
        
        public void iUpdateWaveForm(WindowsServiceNoteClient.ServiceReference1.WaveForm waveform) {
            base.Channel.iUpdateWaveForm(waveform);
        }
        
        public string[] iGetAllAntennaNames() {
            return base.Channel.iGetAllAntennaNames();
        }
        
        public string[] iGetAllAntenna(string type) {
            return base.Channel.iGetAllAntenna(type);
        }
        
        public WindowsServiceNoteClient.ServiceReference1.Antenna iGetAntenna(string name) {
            return base.Channel.iGetAntenna(name);
        }
        
        public void iAddAntenna(WindowsServiceNoteClient.ServiceReference1.Antenna antenna) {
            base.Channel.iAddAntenna(antenna);
        }
        
        public void iDelAntenna(string name) {
            base.Channel.iDelAntenna(name);
        }
        
        public void iUpdateAntenna(WindowsServiceNoteClient.ServiceReference1.Antenna antenna) {
            base.Channel.iUpdateAntenna(antenna);
        }
        
        public string[] iGetAllTransmitter() {
            return base.Channel.iGetAllTransmitter();
        }
        
        public WindowsServiceNoteClient.ServiceReference1.Transmitter iGetTransmitter(string name) {
            return base.Channel.iGetTransmitter(name);
        }
        
        public void iAddTransmitter(WindowsServiceNoteClient.ServiceReference1.Transmitter transmitter) {
            base.Channel.iAddTransmitter(transmitter);
        }
        
        public void iDelTransmitter(string name) {
            base.Channel.iDelTransmitter(name);
        }
        
        public void iUpdateTransmitter(WindowsServiceNoteClient.ServiceReference1.Transmitter transmitter) {
            base.Channel.iUpdateTransmitter(transmitter);
        }
        
        public string[] iGetTerNames() {
            return base.Channel.iGetTerNames();
        }
        
        public WindowsServiceNoteClient.ServiceReference1.TerInfo iGetTer(string name) {
            return base.Channel.iGetTer(name);
        }
        
        public void iAddTerInfo(WindowsServiceNoteClient.ServiceReference1.TerInfo terinfo) {
            base.Channel.iAddTerInfo(terinfo);
        }
        
        public void iDelTerInfo(string name) {
            base.Channel.iDelTerInfo(name);
        }
        
        public void CreatTables(string path) {
            base.Channel.CreatTables(path);
        }
        
        public string GetData(string path) {
            return base.Channel.GetData(path);
        }
        
        public void PutData(string path, string name, string putStr) {
            base.Channel.PutData(path, name, putStr);
        }
        
        public WindowsServiceNoteClient.ServiceReference1.TaskInfo iGetMinTaskID() {
            return base.Channel.iGetMinTaskID();
        }
        
        public string[] iGetFilePath(string[] filenames) {
            return base.Channel.iGetFilePath(filenames);
        }
        
        public void iSetTaskState(int TaskID, short state) {
            base.Channel.iSetTaskState(TaskID, state);
        }
        
        public WindowsServiceNoteClient.ServiceReference1.ProjectInfo[] iGetProjectInfo() {
            return base.Channel.iGetProjectInfo();
        }
    }
}
