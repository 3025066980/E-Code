using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SetupFileObject
{
   class RequestsStp
    {
        string coordinate;
        string sealevel;
        string local;
        string CalculationMode;
        bool CEF;
        bool DelaySpread;
        bool DirectionOfArrival;
        bool DirectionOfDeparture;
        bool ElectricFieldVsFrequency;
        bool ElectricFieldVsTime;
        bool FieldAnimation;
        bool MeanDirectionOfArrival;
        bool MeanDirectionOfDeparture;
        bool Paths;
        bool MeanTimeOfArrival;
        bool EField;
        bool EFieldTotal;
        bool FSPathloss;
        bool FSPower;
        bool Power;
        bool Pathloss;
        bool XPathloss;
        bool InputData;
        bool TimeOfArrival;
        bool ComplexImpulseResponse;
        bool PowerDelayProfile;
        bool TerrainProfile;
        bool PoyntingVector;
        bool C2I;
        bool StrongestTx;
        int MaxRenderedPaths;
        int FieldAnimationIncrement;
        bool FieldAnimationTimeAveraged;
        void init(string str)
        {
            int pos = 0;
            int linelength;
            linelength = Tool.readline(str, pos);
            coordinate = str.Substring(pos, linelength);
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            sealevel = str.Substring(pos, linelength);
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            local = str.Substring(pos, linelength);
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            CalculationMode = str.Substring(pos, linelength).Substring(16);
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            CEF = Convert.ToBoolean(str.Substring(pos, linelength).Substring(4) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            DelaySpread = Convert.ToBoolean(str.Substring(pos, linelength).Substring(12) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            DirectionOfArrival = Convert.ToBoolean(str.Substring(pos, linelength).Substring(19) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            DirectionOfDeparture = Convert.ToBoolean(str.Substring(pos, linelength).Substring(21) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            ElectricFieldVsFrequency = Convert.ToBoolean(str.Substring(pos, linelength).Substring(25) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            ElectricFieldVsTime = Convert.ToBoolean(str.Substring(pos, linelength).Substring(20) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            FieldAnimation = Convert.ToBoolean(str.Substring(pos, linelength).Substring(15) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            MeanDirectionOfArrival = Convert.ToBoolean(str.Substring(pos, linelength).Substring(23) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            MeanDirectionOfDeparture = Convert.ToBoolean(str.Substring(pos, linelength).Substring(25) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            Paths = Convert.ToBoolean(str.Substring(pos, linelength).Substring(6) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            MeanTimeOfArrival = Convert.ToBoolean(str.Substring(pos, linelength).Substring(18) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            EField = Convert.ToBoolean(str.Substring(pos, linelength).Substring(7) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            EFieldTotal = Convert.ToBoolean(str.Substring(pos, linelength).Substring(12) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            FSPathloss = Convert.ToBoolean(str.Substring(pos, linelength).Substring(11) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            FSPower = Convert.ToBoolean(str.Substring(pos, linelength).Substring(8) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            Power = Convert.ToBoolean(str.Substring(pos, linelength).Substring(6) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            Pathloss = Convert.ToBoolean(str.Substring(pos, linelength).Substring(9) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            XPathloss = Convert.ToBoolean(str.Substring(pos, linelength).Substring(10) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            InputData = Convert.ToBoolean(str.Substring(pos, linelength).Substring(10) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            TimeOfArrival = Convert.ToBoolean(str.Substring(pos, linelength).Substring(14) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            ComplexImpulseResponse = Convert.ToBoolean(str.Substring(pos, linelength).Substring(23) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            PowerDelayProfile = Convert.ToBoolean(str.Substring(pos, linelength).Substring(18) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            TerrainProfile = Convert.ToBoolean(str.Substring(pos, linelength).Substring(15) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            PoyntingVector = Convert.ToBoolean(str.Substring(pos, linelength).Substring(15) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            C2I = Convert.ToBoolean(str.Substring(pos, linelength).Substring(4) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            StrongestTx = Convert.ToBoolean(str.Substring(pos, linelength).Substring(11) == "yes");
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            MaxRenderedPaths = Convert.ToInt32(str.Substring(pos, linelength).Substring(17));
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            FieldAnimationIncrement = Convert.ToInt32(str.Substring(pos, linelength).Substring(24));
            pos += linelength + 2;
            linelength = Tool.readline(str, pos);
            FieldAnimationTimeAveraged = Convert.ToBoolean(str.Substring(pos, linelength).Substring(27) == "yes");
        }
        public RequestsStp(string str)
        {
            init(str);
        }
    }
}
